"use strict";(self.webpackChunkdatakit_docs=self.webpackChunkdatakit_docs||[]).push([[198],{6932:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>o});var s=i(4848),r=i(8453);const l={title:"Filters",sidebar:"auto"},a="Filters",n={id:"SDK/filters",title:"Filters",description:"When creating a DataView you can apply a set of default filters. These filters will pre-fill the UI and are also used",source:"@site/docs/SDK/20-filters.md",sourceDirName:"SDK",slug:"/SDK/filters",permalink:"/SDK/filters",draft:!1,unlisted:!1,editUrl:"https://github.com/UseDataKit/SDK/edit/main/docs/docs/SDK/20-filters.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"Filters",sidebar:"auto"},sidebar:"docs",previous:{title:"Creating DataViews",permalink:"/SDK/creating-dataviews"},next:{title:"JavaScript events",permalink:"/SDK/javascript-events"}},c={},o=[{value:"Create a set of filters",id:"create-a-set-of-filters",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"filters",children:"Filters"})}),"\n",(0,s.jsxs)(t.p,{children:["When creating a ",(0,s.jsx)(t.code,{children:"DataView"})," you can apply a set of default filters. These filters will pre-fill the UI and are also used\nby the REST endpoint to retrieve the filtered results."]}),"\n",(0,s.jsx)(t.h2,{id:"create-a-set-of-filters",children:"Create a set of filters"}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.code,{children:"Filter"})," is a value object that consists of a field id, an operator and a value. The ",(0,s.jsx)(t.code,{children:"Filter"})," class has an expressive\nAPI of creating these objects. It has a static constructor for any valid ",(0,s.jsx)(t.code,{children:"Operator"})," type."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Filter::is( string $field, mixed $value )"})," Creates an ",(0,s.jsx)(t.code,{children:"is"})," filter with a single value."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Filter::isNot( string $field, mixed $value )"})," Creates an ",(0,s.jsx)(t.code,{children:"isNot"})," filter with a single value."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Filter::isAny( string $field, array $value )"})," Creates an ",(0,s.jsx)(t.code,{children:"isAny"})," filter with multiple values."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Filter::isAll( string $field, array $value )"})," Creates an ",(0,s.jsx)(t.code,{children:"isAll"})," filter with multiple values."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Filter::isNone( string $field, array $value )"})," Creates an ",(0,s.jsx)(t.code,{children:"isNone"})," filter with multiple values."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"Filter::isNotAll( string $field, array $value )"})," Creates an ",(0,s.jsx)(t.code,{children:"isNotAll"})," filter with multiple values."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["For example; to create a filter for field ",(0,s.jsx)(t.code,{children:"category"})," that should have any of the categories: ",(0,s.jsx)(t.code,{children:"movies"})," & ",(0,s.jsx)(t.code,{children:"music"})," you call\nthe following code:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"use DataKit\\DataViews\\DataView\\Filter;\n\n$category_filter = Filter::isAny( 'category', [ 'movies', 'music' ] );\n"})}),"\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.code,{children:"DataView"})," object requires a ",(0,s.jsx)(t.code,{children:"Filters"})," collection of ",(0,s.jsx)(t.code,{children:"Filter"})," objects passed along to the ",(0,s.jsx)(t.code,{children:"$filters"})," parameter on the\nnamed constructor. The ",(0,s.jsx)(t.code,{children:"Filters::of( Filter ... $filters )"})," method creates this collection, which you can pass an\nunlimited amount of filters."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"use DataKit\\DataViews\\DataView\\DataView;\nuse DataKit\\DataViews\\DataView\\Filter;\nuse DataKit\\DataViews\\DataView\\Filters;\n\n$filters = Filters::of(\n    Filter::is( 'category', 'music' ),\n    Filter::isAny( 'theme', [ 'pop','rock' ] )\n);\n\n$dataview = DataView::table( 'my-dataview', $datasource, $fields, null, $filters );\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>n});var s=i(6540);const r={},l=s.createContext(r);function a(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);